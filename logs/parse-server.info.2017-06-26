{"message":"Unable to ensure uniqueness for usernames: ","name":"MongoError","stack":"MongoError: failed to connect to server [localhost:27017] on first connect [MongoError: connect ECONNREFUSED 127.0.0.1:27017]\n    at Pool.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/topologies/server.js:328:35)\n    at emitOne (events.js:96:13)\n    at Pool.emit (events.js:188:7)\n    at Connection.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/connection/pool.js:280:12)\n    at Connection.g (events.js:291:16)\n    at emitTwo (events.js:106:13)\n    at Connection.emit (events.js:191:7)\n    at Socket.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/connection/connection.js:177:49)\n    at Socket.g (events.js:291:16)\n    at emitOne (events.js:96:13)","level":"warn","timestamp":"2017-06-26T03:11:46.921Z"}
{"message":"Unable to ensure uniqueness for user email addresses: ","name":"MongoError","stack":"MongoError: failed to connect to server [localhost:27017] on first connect [MongoError: connect ECONNREFUSED 127.0.0.1:27017]\n    at Pool.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/topologies/server.js:328:35)\n    at emitOne (events.js:96:13)\n    at Pool.emit (events.js:188:7)\n    at Connection.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/connection/pool.js:280:12)\n    at Connection.g (events.js:291:16)\n    at emitTwo (events.js:106:13)\n    at Connection.emit (events.js:191:7)\n    at Socket.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/connection/connection.js:177:49)\n    at Socket.g (events.js:291:16)\n    at emitOne (events.js:96:13)","level":"warn","timestamp":"2017-06-26T03:11:46.927Z"}
{"message":"Unable to ensure uniqueness for role name: ","name":"MongoError","stack":"MongoError: failed to connect to server [localhost:27017] on first connect [MongoError: connect ECONNREFUSED 127.0.0.1:27017]\n    at Pool.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/topologies/server.js:328:35)\n    at emitOne (events.js:96:13)\n    at Pool.emit (events.js:188:7)\n    at Connection.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/connection/pool.js:280:12)\n    at Connection.g (events.js:291:16)\n    at emitTwo (events.js:106:13)\n    at Connection.emit (events.js:191:7)\n    at Socket.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/connection/connection.js:177:49)\n    at Socket.g (events.js:291:16)\n    at emitOne (events.js:96:13)","level":"warn","timestamp":"2017-06-26T03:11:46.928Z"}
{"error":{"status":403,"message":"unauthorized: master key is required"},"level":"error","message":"Error generating response. { Error: unauthorized: master key is required\n    at promiseEnforceMasterKeyAccess (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/parse-server/lib/middlewares.js:299:17)\n    at /Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/parse-server/lib/PromiseRouter.js:132:22\n    at process._tickDomainCallback (internal/process/next_tick.js:129:7) status: 403, message: 'unauthorized: master key is required' }","timestamp":"2017-06-26T09:05:12.335Z"}
{"functionName":"saveticker","params":{},"level":"info","message":"Ran cloud function saveticker for user undefined with:\n  Input: {}\n  Result: \"OK\"","timestamp":"2017-06-26T09:28:44.852Z"}
{"functionName":"pumpleak","error":{"code":141,"message":"Market require!"},"params":{},"level":"error","message":"Failed running cloud function pumpleak for user undefined with:\n  Input: {}\n  Error: {\"code\":141,\"message\":\"Market require!\"}","timestamp":"2017-06-26T09:33:11.505Z"}
{"error":{"code":141,"message":"Market require!"},"level":"error","message":"Error generating response. ParseError { code: 141, message: 'Market require!' }","timestamp":"2017-06-26T09:33:11.520Z"}
{"code":141,"message":"Market require!","level":"error","timestamp":"2017-06-26T09:33:11.539Z"}
{"functionName":"pumpleak","error":{"code":141,"message":{"message":"unauthorized"}},"params":{"market":"BTC-DOGE"},"level":"error","message":"Failed running cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\"}\n  Error: {\"code\":141,\"message\":{\"message\":\"unauthorized\"}}","timestamp":"2017-06-26T09:35:03.876Z"}
{"error":{"code":141,"message":{"message":"unauthorized"}},"level":"error","message":"Error generating response. ParseError {\n  code: 141,\n  message: ParseError { code: undefined, message: 'unauthorized' } }","timestamp":"2017-06-26T09:35:03.886Z"}
{"code":141,"message":"ParseError { code: undefined, message: 'unauthorized' }","level":"error","timestamp":"2017-06-26T09:35:03.893Z"}
{"functionName":"pumpleak","error":{"code":141,"message":{"message":"unauthorized"}},"params":{"market":"BTC-DOGE"},"level":"error","message":"Failed running cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\"}\n  Error: {\"code\":141,\"message\":{\"message\":\"unauthorized\"}}","timestamp":"2017-06-26T09:35:41.386Z"}
{"error":{"code":141,"message":{"message":"unauthorized"}},"level":"error","message":"Error generating response. ParseError {\n  code: 141,\n  message: ParseError { code: undefined, message: 'unauthorized' } }","timestamp":"2017-06-26T09:35:41.399Z"}
{"code":141,"message":"ParseError { code: undefined, message: 'unauthorized' }","level":"error","timestamp":"2017-06-26T09:35:41.408Z"}
{"functionName":"pumpleak","error":{"code":141,"message":{"message":"unauthorized"}},"params":{"market":"BTC-DOGE"},"level":"error","message":"Failed running cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\"}\n  Error: {\"code\":141,\"message\":{\"message\":\"unauthorized\"}}","timestamp":"2017-06-26T09:35:44.091Z"}
{"error":{"code":141,"message":{"message":"unauthorized"}},"level":"error","message":"Error generating response. ParseError {\n  code: 141,\n  message: ParseError { code: undefined, message: 'unauthorized' } }","timestamp":"2017-06-26T09:35:44.093Z"}
{"code":141,"message":"ParseError { code: undefined, message: 'unauthorized' }","level":"error","timestamp":"2017-06-26T09:35:44.095Z"}
{"functionName":"pumpleak","params":{"market":"BTC-DOGE"},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\"}\n  Result: \"OK\"","timestamp":"2017-06-26T09:36:19.599Z"}
{"functionName":"pumpleak","params":{"market":"BTC-DOGE"},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\"}\n  Result: \"OK\"","timestamp":"2017-06-26T09:47:06.653Z"}
{"functionName":"pumpleak","params":{"market":"BTC-DOGE"},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\"}\n  Result: \"OK\"","timestamp":"2017-06-26T09:50:17.692Z"}
{"functionName":"pumpleak","params":{"market":"BTC-DOGE"},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\"}\n  Result: {\"success\":false,\"message\":\"RATE_NOT_PROVIDED\",\"result\":null}","timestamp":"2017-06-26T09:59:30.728Z"}
{"functionName":"pumpleak","params":{"market":"BTC-DOGE"},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\"}\n  Result: {\"success\":true,\"message\":\"\",\"result\":{\"uuid\":\"71a750f7-bc62-430b-9693-c6ea8f05f5aa\"}}","timestamp":"2017-06-26T10:00:24.963Z"}
{"functionName":"pumpleak","error":{"code":141,"message":"Market require!"},"params":{"market":"BTC-DOGE"},"level":"error","message":"Failed running cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\"}\n  Error: {\"code\":141,\"message\":\"Market require!\"}","timestamp":"2017-06-26T10:11:38.295Z"}
{"error":{"code":141,"message":"Market require!"},"level":"error","message":"Error generating response. ParseError { code: 141, message: 'Market require!' }","timestamp":"2017-06-26T10:11:38.312Z"}
{"code":141,"message":"Market require!","level":"error","timestamp":"2017-06-26T10:11:38.323Z"}
{"functionName":"pumpleak","error":{"code":141,"message":"Market require!"},"params":{"market":"BTC-DOGE","seed":0.2},"level":"error","message":"Failed running cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\",\"seed\":0.2}\n  Error: {\"code\":141,\"message\":\"Market require!\"}","timestamp":"2017-06-26T10:18:37.604Z"}
{"error":{"code":141,"message":"Market require!"},"level":"error","message":"Error generating response. ParseError { code: 141, message: 'Market require!' }","timestamp":"2017-06-26T10:18:37.613Z"}
{"code":141,"message":"Market require!","level":"error","timestamp":"2017-06-26T10:18:37.621Z"}
{"functionName":"pumpleak","error":{"code":141,"message":"Market require!"},"params":{"market":"BTC-DOGE","seed":0.2,"priceSafety":1},"level":"error","message":"Failed running cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\",\"seed\":0.2,\"priceSafety\":1}\n  Error: {\"code\":141,\"message\":\"Market require!\"}","timestamp":"2017-06-26T10:18:58.899Z"}
{"error":{"code":141,"message":"Market require!"},"level":"error","message":"Error generating response. ParseError { code: 141, message: 'Market require!' }","timestamp":"2017-06-26T10:18:58.901Z"}
{"code":141,"message":"Market require!","level":"error","timestamp":"2017-06-26T10:18:58.903Z"}
{"functionName":"pumpleak","params":{"market":"BTC-DOGE","seed":0.2,"priceSafe":1,"fake":1},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\",\"seed\":0.2,\"priceSafe\":1,\"fake\":1}\n  Result: \"Fake\"","timestamp":"2017-06-26T10:33:19.447Z"}
{"functionName":"pumpleak","params":{"market":"BTC-DOGE","seed":0.2,"priceSafe":1,"fake":0},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\",\"seed\":0.2,\"priceSafe\":1,\"fake\":0}\n  Result: {\"success\":false,\"message\":\"INSUFFICIENT_FUNDS\",\"result\":null}","timestamp":"2017-06-26T10:34:41.936Z"}
{"functionName":"pumpleak","params":{"market":"BTC-DOGE","seed":0.2,"priceSafe":1,"fake":1},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\",\"seed\":0.2,\"priceSafe\":1,\"fake\":1}\n  Result: \"Fake\"","timestamp":"2017-06-26T10:35:23.367Z"}
{"functionName":"pumpleak","params":{"market":"BTC-DOGE","seed":0.2,"priceSafe":1,"fake":1},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\",\"seed\":0.2,\"priceSafe\":1,\"fake\":1}\n  Result: \"Fake\"","timestamp":"2017-06-26T10:36:46.086Z"}
{"functionName":"pumpleak","params":{"market":"BTC-DOGE","seed":0.2,"priceSafe":0,"fake":1},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-DOGE\",\"seed\":0.2,\"priceSafe\":0,\"fake\":1}\n  Result: \"Fake\"","timestamp":"2017-06-26T10:36:56.997Z"}
{"functionName":"pumpleak","params":{"market":"BTC-ETH","seed":0.2,"priceSafe":0,"fake":1},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-ETH\",\"seed\":0.2,\"priceSafe\":0,\"fake\":1}\n  Result: \"Fake\"","timestamp":"2017-06-26T10:37:21.255Z"}
{"functionName":"pumpleak","params":{"market":"BTC-ETH","seed":0.2,"priceSafe":1,"fake":1},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-ETH\",\"seed\":0.2,\"priceSafe\":1,\"fake\":1}\n  Result: \"Fake\"","timestamp":"2017-06-26T10:37:36.560Z"}
{"functionName":"pumpleak","error":{"code":141,"message":"Market require!"},"params":{"market":"BTC-ETH","seed":0.2,"priceSafe":1,"fake":1,"holdRatio":1.1,"sellRatio":2.5},"level":"error","message":"Failed running cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-ETH\",\"seed\":0.2,\"priceSafe\":1,\"fake\":1,\"holdRatio\":1.1,\"sellRatio\":2.5}\n  Error: {\"code\":141,\"message\":\"Market require!\"}","timestamp":"2017-06-26T11:00:27.892Z"}
{"error":{"code":141,"message":"Market require!"},"level":"error","message":"Error generating response. ParseError { code: 141, message: 'Market require!' }","timestamp":"2017-06-26T11:00:27.907Z"}
{"code":141,"message":"Market require!","level":"error","timestamp":"2017-06-26T11:00:27.957Z"}
{"functionName":"pumpleak","params":{"market":"BTC-ETH","seed":0.2,"priceSafe":1,"fake":1,"holdRatio":1.1,"sellRatio":2.5,"sellInterval":1000},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-ETH\",\"seed\":0.2,\"priceSafe\":1,\"fake\":1,\"holdRatio\":1.1,\"sellRatio\":2.5,\"sellInterval\":1000}\n  Result: \"Fake\"","timestamp":"2017-06-26T11:01:22.375Z"}
{"functionName":"pumpleak","params":{"market":"BTC-ETH","seed":0.2,"priceSafe":1,"fake":1,"holdRatio":1.1,"sellRatio":2.5,"sellInterval":1000},"level":"info","message":"Ran cloud function pumpleak for user undefined with:\n  Input: {\"market\":\"BTC-ETH\",\"seed\":0.2,\"priceSafe\":1,\"fake\":1,\"holdRatio\":1.1,\"sellRatio\":2.5,\"sellInterval\":1000}\n  Result: \"Fake\"","timestamp":"2017-06-26T11:03:55.971Z"}
{"message":"Unable to ensure uniqueness for usernames: ","name":"MongoError","stack":"MongoError: failed to connect to server [localhost:27017] on first connect [MongoError: connect ECONNREFUSED 127.0.0.1:27017]\n    at Pool.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/topologies/server.js:328:35)\n    at emitOne (events.js:96:13)\n    at Pool.emit (events.js:188:7)\n    at Connection.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/connection/pool.js:280:12)\n    at Connection.g (events.js:291:16)\n    at emitTwo (events.js:106:13)\n    at Connection.emit (events.js:191:7)\n    at Socket.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/connection/connection.js:177:49)\n    at Socket.g (events.js:291:16)\n    at emitOne (events.js:96:13)","level":"warn","timestamp":"2017-06-26T15:03:29.548Z"}
{"message":"Unable to ensure uniqueness for user email addresses: ","name":"MongoError","stack":"MongoError: failed to connect to server [localhost:27017] on first connect [MongoError: connect ECONNREFUSED 127.0.0.1:27017]\n    at Pool.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/topologies/server.js:328:35)\n    at emitOne (events.js:96:13)\n    at Pool.emit (events.js:188:7)\n    at Connection.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/connection/pool.js:280:12)\n    at Connection.g (events.js:291:16)\n    at emitTwo (events.js:106:13)\n    at Connection.emit (events.js:191:7)\n    at Socket.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/connection/connection.js:177:49)\n    at Socket.g (events.js:291:16)\n    at emitOne (events.js:96:13)","level":"warn","timestamp":"2017-06-26T15:03:29.555Z"}
{"message":"Unable to ensure uniqueness for role name: ","name":"MongoError","stack":"MongoError: failed to connect to server [localhost:27017] on first connect [MongoError: connect ECONNREFUSED 127.0.0.1:27017]\n    at Pool.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/topologies/server.js:328:35)\n    at emitOne (events.js:96:13)\n    at Pool.emit (events.js:188:7)\n    at Connection.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/connection/pool.js:280:12)\n    at Connection.g (events.js:291:16)\n    at emitTwo (events.js:106:13)\n    at Connection.emit (events.js:191:7)\n    at Socket.<anonymous> (/Users/minhphuong/Projects/Personal/tradingbot/bittrex-pump/node_modules/mongodb-core/lib/connection/connection.js:177:49)\n    at Socket.g (events.js:291:16)\n    at emitOne (events.js:96:13)","level":"warn","timestamp":"2017-06-26T15:03:29.556Z"}
